Build1=Default,nl.pdeg.eancheck
File1=arial.ttf
File2=artikel.json
File3=eancheck.db
File4=eancheck.png
File5=Main.bal
File6=materialdesignicons-webfont.ttf
File7=pnlUnknownEAN.bal
FileGroup1=files
FileGroup2=files
FileGroup3=files
FileGroup4=files
FileGroup5=Forms
FileGroup6=files
FileGroup7=Forms
Group=Default Group
Library1=core
Library10=runtimepermissions
Library11=json
Library12=sql
Library2=xui
Library3=jmqtt
Library4=randomaccessfile
Library5=audio
Library6=serial
Library7=xui views
Library8=phone
Library9=accessibility
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="29"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~
Module1=ClassMqtt
Module2=DbFunctions
Module3=GeneralFunctions
Module4=GetScanner
Module5=ImportArticleJson
Module6=Starter
NumberOfFiles=7
NumberOfLibraries=12
NumberOfModules=6
Version=10.2
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: EAN Checker
	#VersionCode: 1
	#VersionName: 0.15
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: portrait
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: False
#End Region

Sub Process_Globals
	Type productData(id As String, articleNr As String, ean1 As String, ean2 As String, ean3 As String, _
					 descr As String, pack As String, alfa As String, statie As String)
	Private xui As XUI
	Private clsImportJson As ImportArticleJson
	dim beep as Beeper
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	Private clsFunc As GeneralFunctions
	Private clsDb As DbFunctions
	Private clsScanner As GetScanner
	Private clvUnknownEan As CustomListView
	Private pnlImport As Panel
	Private lblHeader As Label
	Private lblEanMissing As Label
	Private lblArtNr As Label
	Private lblEan1 As Label
	Private lblEan2 As Label
	Private lblEan3 As Label
	Private lblOms As Label
	Private pnlEan As Panel
	Private lblPack As Label
	Private pnlEanMissing As Panel
	Private pnlTestEan As Panel
End Sub

Sub Activity_Create(FirstTime As Boolean)
	CheckIfDbExists
	InitClasses
	
	Activity.LoadLayout("Main")
	lblHeader.Text = $"EAN Controle v${Application.VersionName}"$
	ShowEanTotalAndNotFound
	clvUnknownEan.Clear
	
	'GetConnected Devices
	InitScanner
End Sub

Private Sub InitClasses
	clsImportJson.Initialize
	clsDb.Initialize
	clsFunc.Initialize
	clsScanner.Initialize("Main")
End Sub

Sub InitScanner
	clsScanner.serial1.Initialize("Serial")
	clsScanner.TimeGetDevice.Initialize("timerDeviceDone", 2000)
	clsScanner.ShowPairedDevices
	If clsScanner.ScannerOnceConnected=True Then
		clsScanner.TimeGetDevice.Enabled=True
		clsFunc.createCustomToast("Scanner verbonden", Colors.Blue)
	Else
		clsFunc.createCustomToast("Scanner niet gevonden", Colors.red)
	End If
End Sub

Sub ScannerFound(found As Boolean)
	clsFunc.createCustomToast("Scanner verbonden", Colors.Blue)
	
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Sub ShowEanTotalAndNotFound
	lblEanMissing.Text = $"Ean ${clsDb.GetArticleCount} waarvan ${clsDb.GetUnknownEanCount} onbekend"$
End Sub

Sub CheckIfDbExists
	If File.Exists(Starter.filePath, "eancheck.db") = False Then
		File.Copy(File.DirAssets, "eancheck.db", Starter.filePath, "eancheck.db")
	End If
End Sub

Sub pnlImport_Click
	If clsDb.GetArticleCount > 0 Then
		Msgbox2Async("Artikel tabel is niet leeg, door gaan met importeren", "Artikelen importeren", "Ja", "", "Nee", Application.Icon, False)
		Wait For Msgbox_Result (Result As Int)
		If Result = DialogResponse.POSITIVE Then
			ProgressDialogShow2("Artikelen bijwerken..", False)
			Sleep(300)
			Wait For (clsDb.PurgeArticleTable) Complete (done As Boolean)
			ProgressDialogHide
		End If
	End If
	Wait For (clsDb.ParseArticleJson) Complete (done As Boolean)
	
	clsFunc.createCustomToast("Artikelen geïmporteerd", Colors.Blue)
	Sleep(100)
	ShowEanTotalAndNotFound
End Sub

Sub GenClvItem(prodData As productData)
	If checkItemInList(prodData.id) Then Return
	
	Dim p As B4XView = xui.CreatePanel("")
	p.SetLayoutAnimated(0, 0dip, 0dip, clvUnknownEan.AsView.Width, 220dip)
	p.LoadLayout("pnlUnknownEAN")
	p.Tag = prodData.id
	
	lblArtNr.Text = prodData.articleNr
	lblEan1.Text = prodData.ean1
	lblEan2.Text = prodData.ean2
	lblEan3.Text = prodData.ean3
	lblOms.Text = prodData.descr
	lblPack.Text = prodData.pack
	
	clvUnknownEan.Add(p, "")
		
End Sub

Sub checkItemInList(id As String) As Boolean
	Dim p As Panel
	For i = 0 To clvUnknownEan.Size - 1
		p = clvUnknownEan.GetPanel(i)
		If p.Tag = id Then
			beep.Initialize(250, 2500)
			
			Return True
		End If
	Next
	Return False
End Sub

'INTERNAL JONGENS CODE IS 7 CHARACTERS LOG
Sub ProcessScannedCode(scannedCode As String)
	
	Dim isJongens As Boolean = scannedCode.Length = 7
		
	If isJongens Then
		findJongensCode(scannedCode)
	Else
		findProuctCode(scannedCode)
	End If
	
'	DetermineCodeFound
End Sub

Sub DetermineCodeFound
	Dim lst As List = clsDb.GetUnknownEanData'ignore
	GenClvItem(lst.Get(0))
	lblEanMissing.Text = $"Ean ${clsDb.GetArticleCount} waarvan ${clvUnknownEan.Size} onbekend"$
	
End Sub

Sub findJongensCode(code As String)
	Starter.firstCodeScanned = code
	Dim firstFound As Int = clsDb.ProcessScannedCode(True)
	If firstFound = 1 Then
		Starter.eanJongensFound = True
		Starter.scannedJongensCode = code
		clsFunc.createCustomToast($"Jongens code GEVONDEN"$, Colors.Blue)
	End If
End Sub

Sub findProuctCode(code As String)
	Starter.firstCodeScanned = code
	Dim isFound As Int = clsDb.ProcessScannedCode(False)
	If isFound = 1 Then
		Starter.eanProductFound = True
		Starter.scannedProductCode = code
		clsFunc.createCustomToast($"Product code GEVONDEN"$, Colors.Blue)
	End If
End Sub

Sub clearScanSearchVars
	Starter.eanProductFound = False
	Starter.eanJongensFound = False
	Starter.scannedJongensCode = ""
	Starter.scannedProductCode = ""
	Starter.firstCodeScanned = ""
	Starter.secondCodeScanned = ""
End Sub

Sub pnlTestEan_Click
	Dim sTime As Long = DateTime.Now
	clearScanSearchVars
	ProcessScannedCode("5449000228354")'2
	ProcessScannedCode("0101634")
	If Starter.eanJongensFound = False Or Starter.eanProductFound = False Then
		DetermineCodeFound
	End If
	
	Log($"Codes gevonden in ${DateTime.Now-sTime}ms"$)
End Sub

'Starter.secondCodeScanned = "5449000228352" '2
	'	Starter.secondCodeScanned = "0101634" '2

