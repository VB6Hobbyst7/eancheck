Build1=Default,nl.pdeg.eancheck
File1=arial.ttf
File2=artikel.json
File3=changeUnknowDescription.bal
File4=eancheck.db
File5=eancheck.png
File6=iphone_whatsapp_2016.mp3
File7=Main.bal
File8=materialdesignicons-webfont.ttf
File9=pnlUnknownEAN.bal
FileGroup1=files
FileGroup2=files
FileGroup3=Forms
FileGroup4=files
FileGroup5=files
FileGroup6=Default Group
FileGroup7=Forms
FileGroup8=files
FileGroup9=Forms
Group=Default Group
Library1=core
Library10=runtimepermissions
Library11=json
Library12=sql
Library13=net
Library14=stringutils
Library2=xui
Library3=jmqtt
Library4=randomaccessfile
Library5=audio
Library6=serial
Library7=xui views
Library8=phone
Library9=accessibility
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="14" android:targetSdkVersion="29"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~'End of default text.~\n~
Module1=ClassFtp
Module2=ClassMqtt
Module3=DbFunctions
Module4=GeneralFunctions
Module5=GetScanner
Module6=ImportArticleJson
Module7=Starter
NumberOfFiles=9
NumberOfLibraries=14
NumberOfModules=7
Version=10.2
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: EAN Checker
	#VersionCode: 1
	#VersionName: 0.15
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: portrait
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: False
#End Region

Sub Process_Globals
	Type productData(id As String, articleNr As String, ean1 As String, ean2 As String, ean3 As String, _
					 descr As String, pack As String, alfa As String, statie As String, dateAdded As Long, _
					 artnrFound As Int, ean1Found As Int, ean2Found As Int)
					 
	Type productDataCsv(id As String, articleNr As String, verpakking As String, inhoud As String, eenheid As String, _
					    descr As String, statiegeld As String, artnr_lev As String, locatie As String, voorraad As String, _
					    ean1 As String, ean2 As String, ean3 As String,dateAdded As Long)
					 				 
	Private xui As XUI
	Private clsImportJson As ImportArticleJson
	Dim beep As Beeper
	Private unKnownAdd As Boolean
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	DateTime.DateFormat="EEE, d MMM yyyy HH:mm:ss"
	Private clsFtp As ClassFtp
	Private clsFunc As GeneralFunctions
	Private clsDb As DbFunctions
	Private clsScanner As GetScanner
	Private clvUnknownEan As CustomListView
	Private dialog As B4XDialog
	
	Private pnlImport As Panel
	Private lblHeader As Label
	Private lblEanMissing As Label
	Private lblArtNr As Label
	Private lblEan1 As Label
	Private lblEan2 As Label
	Private lblEan3 As Label
	Private lblOms As B4XView
	Private pnlEan As Panel
	Private lblPack As Label
	Private pnlEanMissing As Panel
	Private pnlTestEan As Panel
	Private fltDescription As B4XFloatTextField
	Private lblRemoveItem As Label
	Private lblDateTimeAdded As Label
	Private pnlRemoveItem As Panel
	Private lblNoItemsFound As Label
	Private lblLastScanJongens As Label
	Private lblLastScanProduct As Label
End Sub

Sub Activity_Create(FirstTime As Boolean)
	CheckIfDbExists
	InitClasses
	
	Activity.LoadLayout("Main")
	dialog.Initialize(Activity)
	lblHeader.Text = $"EAN Controle v${Application.VersionName}"$
	clsFtp.DownloadAndProcessOrder("998")
	clvUnknownEan.Clear
	GetUnknownItemList
	'GetConnected Devices
'	InitScanner
End Sub

Private Sub InitClasses
	clsImportJson.Initialize
	clsDb.Initialize
	clsFunc.Initialize
	clsScanner.Initialize("Main")
	clsFtp.Initialize
End Sub

Sub InitScanner
	clsScanner.serial1.Initialize("Serial")
	clsScanner.TimeGetDevice.Initialize("timerDeviceDone", 2000)
	clsScanner.ShowPairedDevices
	If clsScanner.ScannerOnceConnected=True Then
		clsScanner.TimeGetDevice.Enabled=True
		clsFunc.createCustomToast("Scanner verbonden", Colors.Blue)
	Else
		clsFunc.createCustomToast("Scanner niet gevonden", Colors.red)
	End If
End Sub

Sub ScannerFound(found As Boolean)
	clsFunc.createCustomToast("Scanner verbonden", Colors.Blue)
	
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

Sub GetUnknownItemList
	Dim lst As List = clsDb.GetUnknownEanItems
	clvUnknownEan.Clear
	
	For Each item As productData In lst
		GenClvItem(item)
	Next
	ShowEanTotalAndNotFound
End Sub

Sub ShowEanTotalAndNotFound
	Dim unknownCount As Int = clsDb.GetUnknownEanCount
	lblEanMissing.Text = $"Ean ${clsDb.GetArticleCount} waarvan ${unknownCount} onbekend"$
	lblNoItemsFound.Visible = unknownCount < 1
End Sub

Sub CheckIfDbExists
	If File.Exists(Starter.filePath, "eancheck.db") = False Then
		File.Copy(File.DirAssets, "eancheck.db", Starter.filePath, "eancheck.db")
	End If
End Sub

Sub pnlImport_Click
	If clsDb.GetArticleCount > 0 Then
		Msgbox2Async("Artikel tabel is niet leeg, door gaan met importeren", "Artikelen importeren", "Ja", "", "Nee", Application.Icon, False)
		Wait For Msgbox_Result (Result As Int)
		If Result = DialogResponse.POSITIVE Then
			ProgressDialogShow2("Artikelen bijwerken..", False)
			Sleep(300)
			Wait For (clsDb.PurgeArticleTable) Complete (done As Boolean)
			Wait For (clsDb.ParseArticleJson) Complete (done As Boolean)
			clsFunc.createCustomToast("Artikelen geïmporteerd", Colors.Blue)
			Sleep(100)
			ProgressDialogHide
		End If
	End If
	
	ShowEanTotalAndNotFound
End Sub

Sub GenClvItem(prodData As productData)
	unKnownAdd = False
	
	If checkItemInList(prodData.id) Then Return
	
	
	Dim p As B4XView = xui.CreatePanel("")
	Dim aDate As Long = prodData.dateAdded
	
	p.SetLayoutAnimated(0, 0dip, 0dip, clvUnknownEan.AsView.Width, 270dip)
	p.LoadLayout("pnlUnknownEAN")
	p.Tag = prodData.id
	
	pnlEanMissing.Tag = prodData.id
	lblArtNr.Text = prodData.articleNr
	lblEan1.Text = prodData.ean1
	lblEan2.Text = prodData.ean2
	lblEan3.Text = prodData.ean3
	lblOms.Text = prodData.descr
	lblPack.Text = prodData.pack
	lblDateTimeAdded.Text = DateTime.Date(aDate)
	
	If prodData.artnrFound = 0 Then
		lblArtNr.TextColor = Colors.Red
	End If
	If prodData.ean1Found = 0 Then
		lblEan1.TextColor = Colors.Red
		lblEan2.TextColor = Colors.Red
	End If
	
	clvUnknownEan.InsertAt(0, p, "")
'	clvUnknownEan.Add(p, "")
	unKnownAdd = True	
End Sub

Sub checkItemInList(id As String) As Boolean
	Dim p As Panel
	p.Initialize("")
	For i = 0 To clvUnknownEan.Size - 1
		p = clvUnknownEan.GetPanel(i)
		If p.Tag = id Then
			beep.Initialize(250, 2500)
			Return True
		End If
	Next
	Return False
End Sub

'INTERNAL JONGENS CODE IS 7 CHARACTERS LOG
Sub ProcessScannedCode(scannedCode As String)
	
	Dim isJongens As Boolean = scannedCode.Length = 7
		
	If isJongens Then
		lblLastScanJongens.Text = scannedCode
		findJongensCode(scannedCode)
	Else
		lblLastScanProduct.Text	= scannedCode
		findProuctCode(scannedCode)
	End If
	
'	DetermineCodeFound
End Sub

Sub DetermineCodeFound
	Dim lst As List = clsDb.GetUnknownEanData
	Dim passedItem As productData = lst.Get(0)
	
	'CHECK IF ITEM EXISTS IN UNKNOWN ITEMS TABLE
	'If clsDb.CheckIfItemExistsInUnknownTable(passedItem.articleNr, passedItem.ean1) = 0 Then
	If clsDb.CheckIfItemExistsInUnknownTable(Starter.scannedJongensCode, Starter.scannedProductCode) = 0 Then
		If lst.Size > 0 Then
			GenClvItem(lst.Get(0))
		End If
	
		If unKnownAdd And lst.Size > 0 Then
			Dim lstNewItem As List
			lstNewItem = clsDb.AddItemToUnknownTable(lst.Get(0))
			GenClvItem(lstNewItem.Get(0))
			clvUnknownEan.Refresh
			If clvUnknownEan.Size > 0 Then
				clvUnknownEan.JumpToItem(0)
			End If
		End If
	Else
		Starter.PlayFound
		clsFunc.createCustomToast("Item al in lijst", Colors.Blue)
	End If
	
	ShowEanTotalAndNotFound
End Sub

Sub findJongensCode(code As String)
	Starter.firstCodeScanned = code
	Dim firstFound As Int = clsDb.ProcessScannedCode(True)
	If firstFound = 1 Then
		Starter.eanJongensFound = True
'		Starter.scannedJongensCode = code
	End If
	Starter.scannedJongensCode = code
End Sub

Sub findProuctCode(code As String)
	Starter.firstCodeScanned = code
	Dim isFound As Int = clsDb.ProcessScannedCode(False)
	If isFound = 1 Then
		Starter.eanProductFound = True
'		Starter.scannedProductCode = code
	End If
	Starter.scannedProductCode = code
End Sub

Sub clearScanSearchVars
	Starter.eanProductFound = False
	Starter.eanJongensFound = False
	Starter.scannedJongensCode = ""
	Starter.scannedProductCode = ""
	Starter.firstCodeScanned = ""
	Starter.secondCodeScanned = ""
	Starter.prodEan1 = ""
	Starter.prodEan2 = ""
	Starter.prodEan3 = ""
End Sub

Sub pnlTestEan_Click
	clearScanSearchVars
	ProcessScannedCode("5449000228352")'2
	ProcessScannedCode("0101630")'4
	If Starter.eanJongensFound = False Or Starter.eanProductFound = False Then
		DetermineCodeFound
	Else
		clsFunc.createCustomToast("Item bekend", Colors.Green)	
	End If
	clearScanSearchVars
End Sub

Sub lblOms_Click
	Dim lbl As Label = Sender
	If lbl.Text.IndexOf("Onbekend")= - 1 Then Return
	
	Dim p As B4XView = xui.CreatePanel("")
	p.SetLayoutAnimated(0, 0, 0, 350dip, 150dip)
	p.LoadLayout("changeUnknowDescription")
	dialog.Title = "Nieuwe omschrijving"
	dialog.PutAtTop = True 'put the dialog at the top of the screen
	dialog.BackgroundColor = Colors.White
	dialog.ButtonsColor = Colors.LightGray
	dialog.ButtonsTextColor = Colors.Black
	dialog.TitleBarHeight = 80dip
	dialog.BackgroundColor = xui.Color_White
	dialog.ButtonsColor = xui.Color_White
	dialog.ButtonsTextColor = dialog.TitleBarColor
	dialog.BorderColor = xui.Color_Transparent
	
	Wait For (dialog.ShowCustom(p, "OKE", "", "ANNULEER")) Complete (Result As Int)
	If Result = xui.DialogResponse_Positive Then
		Log(fltDescription.Text)
	End If
End Sub

Sub pnlRemoveItem_Click
	Dim pnl, pnlParent As Panel
	Dim id As String
	Dim index As Int
	
	pnl.Initialize("")
	pnlParent.Initialize("")
	pnl = Sender
	pnlParent = pnl.Parent
	id = pnlParent.Tag
	index = clvUnknownEan.GetItemFromView(pnlParent)
	
	Msgbox2Async("Item verwijderen?", "EAN Checker", "Ja", "", "Nee", Application.Icon, False)
	Wait For Msgbox_Result (Result As Int)
	If Result = DialogResponse.NEGATIVE Then
		Return
	End If
	
	clsDb.DeleteItemFromList(id)
	clvUnknownEan.RemoveAt(index)
	ShowEanTotalAndNotFound
End Sub